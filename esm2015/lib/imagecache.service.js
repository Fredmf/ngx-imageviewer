import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class ImageCacheService {
    constructor() {
        this._cache = [];
    }
    get cache() {
        return this._cache;
    }
    getCache(url, page) {
        return this.cache.find(i => i.url === url && i.page === page);
    }
    getImage(url, page) {
        const c = this.getCache(url, page);
        return c ? c.image : null;
    }
    saveImage(url, page, image) {
        const cache = this.getCache(url, page);
        if (cache) {
            cache.image = image;
        }
        else {
            this.cache.push({ url, page, image });
        }
    }
    disposeCache() {
        this.cache.forEach(i => URL.revokeObjectURL(i.image.src));
        this._cache = [];
    }
}
ImageCacheService.ɵprov = i0.ɵɵdefineInjectable({ factory: function ImageCacheService_Factory() { return new ImageCacheService(); }, token: ImageCacheService, providedIn: "root" });
ImageCacheService.decorators = [
    { type: Injectable, args: [{ providedIn: 'root' },] }
];
ImageCacheService.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2VjYWNoZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RyYXZpcy9idWlsZC9lbWF6djcyL25neC1pbWFnZXZpZXdlci9wcm9qZWN0cy9uZ3gtaW1hZ2V2aWV3ZXIvc3JjLyIsInNvdXJjZXMiOlsibGliL2ltYWdlY2FjaGUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQVMzQyxNQUFNLE9BQU8saUJBQWlCO0lBSTVCO1FBRlEsV0FBTSxHQUFlLEVBQUUsQ0FBQztJQUVqQixDQUFDO0lBRWhCLElBQUksS0FBSztRQUNQLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDO0lBRUQsUUFBUSxDQUFDLEdBQVcsRUFBRSxJQUFZO1FBQ2hDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLEdBQUcsSUFBSSxDQUFDLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxDQUFDO0lBQ2hFLENBQUM7SUFFRCxRQUFRLENBQUMsR0FBVyxFQUFFLElBQVk7UUFDaEMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDbkMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUM1QixDQUFDO0lBRUQsU0FBUyxDQUFDLEdBQVcsRUFBRSxJQUFZLEVBQUUsS0FBVTtRQUM3QyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUN2QyxJQUFJLEtBQUssRUFBRTtZQUNULEtBQUssQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1NBQ3JCO2FBQU07WUFDTCxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztTQUN2QztJQUNILENBQUM7SUFFRCxZQUFZO1FBQ1YsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUMxRCxJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUNuQixDQUFDOzs7O1lBaENGLFVBQVUsU0FBQyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2FjaGVEZWYge1xuICB1cmw6IHN0cmluZztcbiAgcGFnZTogbnVtYmVyO1xuICBpbWFnZTogYW55O1xufVxuXG5ASW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KVxuZXhwb3J0IGNsYXNzIEltYWdlQ2FjaGVTZXJ2aWNlIHtcblxuICBwcml2YXRlIF9jYWNoZTogQ2FjaGVEZWZbXSA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBnZXQgY2FjaGUoKTogQ2FjaGVEZWZbXSB7XG4gICAgcmV0dXJuIHRoaXMuX2NhY2hlO1xuICB9XG5cbiAgZ2V0Q2FjaGUodXJsOiBzdHJpbmcsIHBhZ2U6IG51bWJlcikge1xuICAgIHJldHVybiB0aGlzLmNhY2hlLmZpbmQoaSA9PiBpLnVybCA9PT0gdXJsICYmIGkucGFnZSA9PT0gcGFnZSk7XG4gIH1cblxuICBnZXRJbWFnZSh1cmw6IHN0cmluZywgcGFnZTogbnVtYmVyKSB7XG4gICAgY29uc3QgYyA9IHRoaXMuZ2V0Q2FjaGUodXJsLCBwYWdlKTtcbiAgICByZXR1cm4gYyA/IGMuaW1hZ2UgOiBudWxsO1xuICB9XG5cbiAgc2F2ZUltYWdlKHVybDogc3RyaW5nLCBwYWdlOiBudW1iZXIsIGltYWdlOiBhbnkpIHtcbiAgICBjb25zdCBjYWNoZSA9IHRoaXMuZ2V0Q2FjaGUodXJsLCBwYWdlKTtcbiAgICBpZiAoY2FjaGUpIHtcbiAgICAgIGNhY2hlLmltYWdlID0gaW1hZ2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuY2FjaGUucHVzaCh7IHVybCwgcGFnZSwgaW1hZ2UgfSk7XG4gICAgfVxuICB9XG5cbiAgZGlzcG9zZUNhY2hlKCkge1xuICAgIHRoaXMuY2FjaGUuZm9yRWFjaChpID0+IFVSTC5yZXZva2VPYmplY3RVUkwoaS5pbWFnZS5zcmMpKTtcbiAgICB0aGlzLl9jYWNoZSA9IFtdO1xuICB9XG59XG4iXX0=