import { InjectionToken } from '@angular/core';
export class ImageViewerConfig {
}
export function createButtonConfig(icon, tooltip, sortId = 0, show = true) {
    return { icon: icon, tooltip: tooltip, sortId: sortId, show: show };
}
export const IMAGEVIEWER_CONFIG = new InjectionToken('imageviewer.config');
export let IMAGEVIEWER_CONFIG_DEFAULT = {
    width: 800,
    height: 600,
    bgStyle: '#ECEFF1',
    scaleStep: 0.1,
    rotateStepper: false,
    loadingMessage: 'Loading...',
    buttonStyle: {
        iconFontFamily: 'Material Icons',
        alpha: 0.5,
        hoverAlpha: 0.7,
        bgStyle: '#000000',
        iconStyle: '#ffffff',
        borderStyle: '#000000',
        borderWidth: 0 // buttons' border width (0 == disabled)
    },
    tooltips: {
        enabled: true,
        bgStyle: '#000000',
        bgAlpha: 0.5,
        textStyle: '#ffffff',
        textAlpha: 0.9,
        padding: 15,
        radius: 20 // tooltip border radius
    },
    nextPageButton: createButtonConfig(String.fromCharCode(0xE409), 'Next page', 0),
    beforePageButton: createButtonConfig(String.fromCharCode(0xE408), 'Previous page', 1),
    zoomOutButton: createButtonConfig(String.fromCharCode(0xE900), 'Zoom out', 0),
    zoomInButton: createButtonConfig(String.fromCharCode(0xE8FF), 'Zoom in', 1),
    rotateLeftButton: createButtonConfig(String.fromCharCode(0xE419), 'Rotate left', 2),
    rotateRightButton: createButtonConfig(String.fromCharCode(0xE41A), 'Rotate right', 3),
    resetButton: createButtonConfig(String.fromCharCode(0xE863), 'Reset', 4)
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2V2aWV3ZXIuY29uZmlnLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RyYXZpcy9idWlsZC9lbWF6djcyL25neC1pbWFnZXZpZXdlci9wcm9qZWN0cy9uZ3gtaW1hZ2V2aWV3ZXIvc3JjLyIsInNvdXJjZXMiOlsibGliL2ltYWdldmlld2VyLmNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWMsY0FBYyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNELE1BQU0sT0FBTyxpQkFBaUI7Q0F3QjdCO0FBbUJELE1BQU0sVUFBVSxrQkFBa0IsQ0FBQyxJQUFhLEVBQUUsT0FBZ0IsRUFBRSxTQUFpQixDQUFDLEVBQUUsT0FBZ0IsSUFBSTtJQUMxRyxPQUFPLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDO0FBQ3RFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxJQUFJLGNBQWMsQ0FBb0Isb0JBQW9CLENBQUMsQ0FBQztBQUU5RixNQUFNLENBQUMsSUFBSSwwQkFBMEIsR0FBc0I7SUFDekQsS0FBSyxFQUFFLEdBQUc7SUFDVixNQUFNLEVBQUUsR0FBRztJQUNYLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLFNBQVMsRUFBRSxHQUFHO0lBQ2QsYUFBYSxFQUFFLEtBQUs7SUFDcEIsY0FBYyxFQUFFLFlBQVk7SUFDNUIsV0FBVyxFQUFFO1FBQ1gsY0FBYyxFQUFFLGdCQUFnQjtRQUNoQyxLQUFLLEVBQUUsR0FBRztRQUNWLFVBQVUsRUFBRSxHQUFHO1FBQ2YsT0FBTyxFQUFFLFNBQVM7UUFDbEIsU0FBUyxFQUFFLFNBQVM7UUFDcEIsV0FBVyxFQUFFLFNBQVM7UUFDdEIsV0FBVyxFQUFFLENBQUMsQ0FBQyx3Q0FBd0M7S0FDeEQ7SUFDRCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsSUFBSTtRQUNiLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLE9BQU8sRUFBRSxHQUFHO1FBQ1osU0FBUyxFQUFFLFNBQVM7UUFDcEIsU0FBUyxFQUFFLEdBQUc7UUFDZCxPQUFPLEVBQUUsRUFBRTtRQUNYLE1BQU0sRUFBRSxFQUFFLENBQUMsd0JBQXdCO0tBQ3BDO0lBQ0QsY0FBYyxFQUFFLGtCQUFrQixDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLEVBQUUsV0FBVyxFQUFFLENBQUMsQ0FBQztJQUMvRSxnQkFBZ0IsRUFBRSxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxFQUFFLGVBQWUsRUFBRSxDQUFDLENBQUM7SUFDckYsYUFBYSxFQUFFLGtCQUFrQixDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLEVBQUUsVUFBVSxFQUFFLENBQUMsQ0FBQztJQUM3RSxZQUFZLEVBQUUsa0JBQWtCLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsRUFBRSxTQUFTLEVBQUUsQ0FBQyxDQUFDO0lBQzNFLGdCQUFnQixFQUFFLGtCQUFrQixDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLEVBQUUsYUFBYSxFQUFFLENBQUMsQ0FBQztJQUNuRixpQkFBaUIsRUFBRSxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxFQUFFLGNBQWMsRUFBRSxDQUFDLENBQUM7SUFDckYsV0FBVyxFQUFFLGtCQUFrQixDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQztDQUN6RSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuZXhwb3J0IGNsYXNzIEltYWdlVmlld2VyQ29uZmlnIHtcbiAgd2lkdGg/OiBudW1iZXI7XG4gIGhlaWdodD86IG51bWJlcjtcbiAgYmdTdHlsZT86IHN0cmluZztcbiAgc2NhbGVTdGVwPzogbnVtYmVyO1xuICByb3RhdGVTdGVwcGVyPzogYm9vbGVhbjtcbiAgYnV0dG9uU3R5bGU/OiBCdXR0b25TdHlsZTtcbiAgbG9hZGluZ01lc3NhZ2U/OiBzdHJpbmc7XG4gIHRvb2x0aXBzPzoge1xuICAgIGVuYWJsZWQ/OiBib29sZWFuLFxuICAgIGJnU3R5bGU/OiBzdHJpbmcsXG4gICAgYmdBbHBoYT86IG51bWJlcixcbiAgICB0ZXh0U3R5bGU/OiBzdHJpbmcsXG4gICAgdGV4dEFscGhhPzogbnVtYmVyLFxuICAgIHBhZGRpbmc/OiBudW1iZXIsXG4gICAgcmFkaXVzPzogbnVtYmVyXG4gIH07XG4gIG5leHRQYWdlQnV0dG9uPzogQnV0dG9uQ29uZmlnO1xuICBiZWZvcmVQYWdlQnV0dG9uPzogQnV0dG9uQ29uZmlnO1xuICB6b29tT3V0QnV0dG9uPzogQnV0dG9uQ29uZmlnO1xuICB6b29tSW5CdXR0b24/OiBCdXR0b25Db25maWc7XG4gIHJvdGF0ZUxlZnRCdXR0b24/OiBCdXR0b25Db25maWc7XG4gIHJvdGF0ZVJpZ2h0QnV0dG9uPzogQnV0dG9uQ29uZmlnO1xuICByZXNldEJ1dHRvbj86IEJ1dHRvbkNvbmZpZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBCdXR0b25TdHlsZSB7XG4gIGljb25Gb250RmFtaWx5Pzogc3RyaW5nO1xuICBhbHBoYT86IG51bWJlcjtcbiAgaG92ZXJBbHBoYT86IG51bWJlcjtcbiAgYmdTdHlsZT86IHN0cmluZztcbiAgaWNvblN0eWxlPzogc3RyaW5nO1xuICBib3JkZXJTdHlsZT86IHN0cmluZztcbiAgYm9yZGVyV2lkdGg/OiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQnV0dG9uQ29uZmlnIHtcbiAgaWNvbj86IHN0cmluZztcbiAgdG9vbHRpcD86IHN0cmluZztcbiAgc29ydElkPzogbnVtYmVyO1xuICBzaG93PzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJ1dHRvbkNvbmZpZyhpY29uPzogc3RyaW5nLCB0b29sdGlwPzogc3RyaW5nLCBzb3J0SWQ6IG51bWJlciA9IDAsIHNob3c6IGJvb2xlYW4gPSB0cnVlKSB7XG4gIHJldHVybiB7IGljb246IGljb24sIHRvb2x0aXA6IHRvb2x0aXAsIHNvcnRJZDogc29ydElkLCBzaG93OiBzaG93IH07XG59XG5cbmV4cG9ydCBjb25zdCBJTUFHRVZJRVdFUl9DT05GSUcgPSBuZXcgSW5qZWN0aW9uVG9rZW48SW1hZ2VWaWV3ZXJDb25maWc+KCdpbWFnZXZpZXdlci5jb25maWcnKTtcblxuZXhwb3J0IGxldCBJTUFHRVZJRVdFUl9DT05GSUdfREVGQVVMVDogSW1hZ2VWaWV3ZXJDb25maWcgPSB7XG4gIHdpZHRoOiA4MDAsIC8vIGNvbXBvbmVudCBkZWZhdWx0IHdpZHRoXG4gIGhlaWdodDogNjAwLCAvLyBjb21wb25lbnQgZGVmYXVsdCBoZWlnaHRcbiAgYmdTdHlsZTogJyNFQ0VGRjEnLCAvLyBjb21wb25lbnQgYmFja2dyb3VuZCBzdHlsZVxuICBzY2FsZVN0ZXA6IDAuMSwgLy8gem9vbSBzY2FsZSBzdGVwICh1c2luZyB0aGUgem9vbSBpbi9vdXQgYnV0dG9ucylcbiAgcm90YXRlU3RlcHBlcjogZmFsc2UsXG4gIGxvYWRpbmdNZXNzYWdlOiAnTG9hZGluZy4uLicsXG4gIGJ1dHRvblN0eWxlOiB7XG4gICAgaWNvbkZvbnRGYW1pbHk6ICdNYXRlcmlhbCBJY29ucycsIC8vIGZvbnQgdXNlZCB0byByZW5kZXIgdGhlIGJ1dHRvbiBpY29uc1xuICAgIGFscGhhOiAwLjUsIC8vIGJ1dHRvbnMnIHRyYW5zcGFyZW5jZSB2YWx1ZVxuICAgIGhvdmVyQWxwaGE6IDAuNywgLy8gYnV0dG9ucycgdHJhbnNwYXJlbmNlIHZhbHVlIHdoZW4gbW91c2UgaXMgb3ZlclxuICAgIGJnU3R5bGU6ICcjMDAwMDAwJywgLy8gIGJ1dHRvbnMnIGJhY2tncm91bmQgc3R5bGVcbiAgICBpY29uU3R5bGU6ICcjZmZmZmZmJywgLy8gYnV0dG9ucycgaWNvbiBjb2xvcnNcbiAgICBib3JkZXJTdHlsZTogJyMwMDAwMDAnLCAvLyBidXR0b25zJyBib3JkZXIgc3R5bGVcbiAgICBib3JkZXJXaWR0aDogMCAvLyBidXR0b25zJyBib3JkZXIgd2lkdGggKDAgPT0gZGlzYWJsZWQpXG4gIH0sXG4gIHRvb2x0aXBzOiB7XG4gICAgZW5hYmxlZDogdHJ1ZSwgLy8gZW5hYmxlIG9yIGRpc2FibGUgdG9vbHRpcHMgZm9yIGJ1dHRvbnNcbiAgICBiZ1N0eWxlOiAnIzAwMDAwMCcsIC8vIHRvb2x0aXAgYmFja2dyb3VuZCBzdHlsZVxuICAgIGJnQWxwaGE6IDAuNSwgLy8gdG9vbHRpcCBiYWNrZ3JvdW5kIHRyYW5zcGFyZW5jZVxuICAgIHRleHRTdHlsZTogJyNmZmZmZmYnLCAvLyB0b29sdGlwJ3MgdGV4dCBzdHlsZVxuICAgIHRleHRBbHBoYTogMC45LCAvLyB0b29sdGlwJ3MgdGV4dCB0cmFuc3BhcmVuY2VcbiAgICBwYWRkaW5nOiAxNSwgLy8gdG9vbHRpcCBwYWRkaW5nXG4gICAgcmFkaXVzOiAyMCAvLyB0b29sdGlwIGJvcmRlciByYWRpdXNcbiAgfSxcbiAgbmV4dFBhZ2VCdXR0b246IGNyZWF0ZUJ1dHRvbkNvbmZpZyhTdHJpbmcuZnJvbUNoYXJDb2RlKDB4RTQwOSksICdOZXh0IHBhZ2UnLCAwKSxcbiAgYmVmb3JlUGFnZUJ1dHRvbjogY3JlYXRlQnV0dG9uQ29uZmlnKFN0cmluZy5mcm9tQ2hhckNvZGUoMHhFNDA4KSwgJ1ByZXZpb3VzIHBhZ2UnLCAxKSxcbiAgem9vbU91dEJ1dHRvbjogY3JlYXRlQnV0dG9uQ29uZmlnKFN0cmluZy5mcm9tQ2hhckNvZGUoMHhFOTAwKSwgJ1pvb20gb3V0JywgMCksXG4gIHpvb21JbkJ1dHRvbjogY3JlYXRlQnV0dG9uQ29uZmlnKFN0cmluZy5mcm9tQ2hhckNvZGUoMHhFOEZGKSwgJ1pvb20gaW4nLCAxKSxcbiAgcm90YXRlTGVmdEJ1dHRvbjogY3JlYXRlQnV0dG9uQ29uZmlnKFN0cmluZy5mcm9tQ2hhckNvZGUoMHhFNDE5KSwgJ1JvdGF0ZSBsZWZ0JywgMiksXG4gIHJvdGF0ZVJpZ2h0QnV0dG9uOiBjcmVhdGVCdXR0b25Db25maWcoU3RyaW5nLmZyb21DaGFyQ29kZSgweEU0MUEpLCAnUm90YXRlIHJpZ2h0JywgMyksXG4gIHJlc2V0QnV0dG9uOiBjcmVhdGVCdXR0b25Db25maWcoU3RyaW5nLmZyb21DaGFyQ29kZSgweEU4NjMpLCAnUmVzZXQnLCA0KVxufTtcbiJdfQ==