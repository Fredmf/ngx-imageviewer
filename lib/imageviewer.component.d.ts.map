{"version":3,"file":"imageviewer.component.d.ts","sources":["imageviewer.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, Renderer2, OnDestroy } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ImageViewerConfig } from './imageviewer.config';\nimport { ImageCacheService } from './imagecache.service';\nexport declare class ImageViewerComponent implements AfterViewInit, OnDestroy {\n    private _sanitizer;\n    private _renderer;\n    private _imageCache;\n    private config;\n    private _src;\n    get src(): FormDataEntryValue;\n    set src(value: FormDataEntryValue);\n    private _filetype;\n    get filetype(): string;\n    set filetype(value: string);\n    private _width;\n    get width(): number;\n    set width(value: number);\n    private _height;\n    get height(): number;\n    set height(value: number);\n    canvasRef: any;\n    private _canvas;\n    private _context;\n    private _dirty;\n    private _nextPageButton;\n    private _beforePageButton;\n    private _zoomOutButton;\n    private _zoomInButton;\n    private _rotateLeftButton;\n    private _rotateRightButton;\n    private _resetButton;\n    private _buttons;\n    private _currentTooltip;\n    private _touchStartState;\n    private _listenDestroyList;\n    private _resource;\n    private _resourceChangeSub;\n    private _imageResource;\n    private _pdfResource;\n    constructor(_sanitizer: DomSanitizer, _renderer: Renderer2, _imageCache: ImageCacheService, config: ImageViewerConfig);\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    setUpResource(): void;\n    onTap(evt: any): void;\n    onTouchEnd(): void;\n    processTouchEvent(evt: any): void;\n    private addEventListeners;\n    private onMouseWheel;\n    private checkTooltipActivation;\n    private nextPage;\n    private previousPage;\n    private zoomIn;\n    private zoomOut;\n    private rotateLeft;\n    private rotateRight;\n    private resetImage;\n    private updateCanvas;\n    private render;\n    private drawButtons;\n    private drawPaginator;\n    private drawRoundRectangle;\n    private extendsDefaultConfig;\n    private screenToCanvasCentre;\n    private getUIElements;\n    private getUIElement;\n    private isImage;\n    private isPdf;\n}\n"]}